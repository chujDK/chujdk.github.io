<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>srop on blog of chuj</title><link>https://www.cjovi.icu/tags/srop.html</link><description>Recent content in srop on blog of chuj</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>chujj31@gmail.com (chuj)</managingEditor><webMaster>chujj31@gmail.com (chuj)</webMaster><lastBuildDate>Sat, 28 Nov 2020 19:13:00 +0000</lastBuildDate><atom:link href="https://www.cjovi.icu/tags/srop/index.xml" rel="self" type="application/rss+xml"/><item><title>srop总结</title><link>https://www.cjovi.icu/wp/srop%E6%80%BB%E7%BB%93.html</link><pubDate>Sat, 28 Nov 2020 19:13:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/wp/srop%E6%80%BB%E7%BB%93.html</guid><description>srop技术，是一种利用sigreturn系统调用（主要是Linux在信号处理时为了保存进程上下文而使用的）来修改寄存器的技术。ctfwik</description></item><item><title>BUU-ciscn_2019_es_7-WP</title><link>https://www.cjovi.icu/wp/buu-ciscn_2019_es_7-wp.html</link><pubDate>Sat, 28 Nov 2020 18:56:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/wp/buu-ciscn_2019_es_7-wp.html</guid><description>这是一道国赛题，当然做之前我还不知道，到了我发现我不会做的时候才知道..这也是我做的第一道srop，虽然wp发的是三道里面最晚的，做完roo</description></item><item><title>BUU-rootersctf_2019_srop-WP</title><link>https://www.cjovi.icu/wp/buu-rootersctf_2019_srop-wp.html</link><pubDate>Sat, 28 Nov 2020 18:17:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/wp/buu-rootersctf_2019_srop-wp.html</guid><description>只开了NX，只存在syscall的gadgets，基本上就是srop了。无非就是做两件事，注入"/bin/sh\x00"和执行execve的</description></item><item><title>BUU-360chunqiu2017_smallest-WP</title><link>https://www.cjovi.icu/wp/buu-360chunqiu2017_smallest-wp.html</link><pubDate>Sat, 28 Nov 2020 10:28:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/wp/buu-360chunqiu2017_smallest-wp.html</guid><description>这篇博客写了两天，我也花了很久来理解srop，现在我可以说我会srop了。 这道题的代码非常短 xor rax, rax mov edx, 400h ; count mov rsi, rsp ; buf mov rdi, rax ; fd syscall ; LINUX - sys_read retn</description></item></channel></rss>