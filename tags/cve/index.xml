<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CVE on blog of chuj</title><link>https://chujdk.github.io/tags/cve.html</link><description>Recent content in CVE on blog of chuj</description><generator>Hugo</generator><language>zh-cn</language><managingEditor>chujj31@gmail.com (chuj)</managingEditor><webMaster>chujj31@gmail.com (chuj)</webMaster><copyright>© chuj</copyright><lastBuildDate>Thu, 09 Mar 2023 00:15:00 +0000</lastBuildDate><atom:link href="https://chujdk.github.io/tags/cve/index.xml" rel="self" type="application/rss+xml"/><item><title>CVE-2022-34918</title><link>https://chujdk.github.io/wp/1663.html</link><pubDate>Thu, 09 Mar 2023 00:15:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://chujdk.github.io/wp/1663.html</guid><description>&lt;h2 id="netfilter-iptables-nftables">&lt;span class="section-num">1&lt;/span> netfilter/iptables/nftables&lt;/h2>
&lt;p>这里简述一下 netfilter 和 iptables 和 nftables 之间的关系，我对网络的了解甚少，所以在看代码的时候三者的关系给了我不少困扰。&lt;/p>
&lt;ul>
&lt;li>&lt;code>netfilter&lt;/code> 是内核中的软件框架，用于网络操作。它提供了许多与数据包过滤，网络地址转换（NAT, Network Address Translation）和端口转发相关的操作。&lt;/li>
&lt;li>&lt;code>nftables&lt;/code> 是内核中的一个子系统，提供了对数据包、帧、报的过滤和分类。旨在取代 &lt;code>netfilter&lt;/code> 的 &lt;code>iptables&lt;/code> 部分。他的用户态管理工具为 &lt;code>nft&lt;/code> 。&lt;/li>
&lt;li>&lt;code>iptables&lt;/code> 是一个用户态程序，可以让系统管理员来配置 ip 数据包的过滤规则。通过一个 &lt;code>netfilter&lt;/code> 模块实现。&lt;/li>
&lt;/ul>
&lt;p>如上可以看出， &lt;code>nft&lt;/code> 和 &lt;code>iptables&lt;/code> 是同类型工具，用于用户的配置。 &lt;code>nftables&lt;/code> 和 &lt;code>iptables&lt;/code> 的内核模块同类型，是 &lt;code>nft&lt;/code> 和 &lt;code>iptables&lt;/code> 这样的工具的“背后的引擎”。他们都是 &lt;code>netfilter&lt;/code> 的子系统。而 &lt;code>netfilter&lt;/code> 是一个内核的网络软件框架，提供了与网络操作相关的许多接口。&lt;/p></description></item><item><title>内核堆喷学习——CVE-2021-22555</title><link>https://chujdk.github.io/pwnreview/1659.html</link><pubDate>Tue, 21 Feb 2023 21:21:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://chujdk.github.io/pwnreview/1659.html</guid><description>&lt;h2 id="总结">&lt;span class="section-num">1&lt;/span> 总结&lt;/h2>
&lt;p>触发漏洞需要 &lt;code>CPA_NET_ADMIN&lt;/code> ，我们先 &lt;code>unshare&lt;/code> 出自己的名称空间，把权限给自己拉满&lt;/p>
&lt;p>漏洞出现在内核的 netfilter 子系统，是一个防火墙系统。用户层中，iptable 即使通过该子系统实现的。&lt;/p></description></item><item><title>CVE-2021-21220</title><link>https://chujdk.github.io/cve/1586.html</link><pubDate>Thu, 16 Dec 2021 14:31:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://chujdk.github.io/cve/1586.html</guid><description>&lt;p>这是一个在今年的 pwn2own 的比赛上披露的漏洞，可以通过 v8 引擎实现任意代码执行，前天看到腾讯玄武实验室推送了 &lt;a href="https://www.zerodayinitiative.com/blog/2021/12/6/two-birds-with-one-stone-an-introduction-to-v8-and-jit-exploitation">two-birds-with-one-stone-an-introduction-to-v8-and-jit-exploitation&lt;/a> 这篇文章，介绍了这个漏洞的成因。漏洞本身是 jit 引擎在选择机器指令时，对 x86 平台下有符号拓展和无符号拓展指令的选择有误造成的，总体来说比较好理解，感觉比较适合作为 v8 jit 利用入门。参考这篇文章和谷歌归档的 &lt;a href="https://bugs.chromium.org/p/chromium/issues/attachmentText?aid=497472">exp&lt;/a>，我也完成了利用。这里记录一下。本人也只是刚刚开始摸索浏览器相关的利用，肯定有不对的地方，欢迎指出。&lt;/p></description></item><item><title>CVE-2021-3493</title><link>https://chujdk.github.io/software-testing/1481.html</link><pubDate>Tue, 20 Jul 2021 19:24:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://chujdk.github.io/software-testing/1481.html</guid><description>&lt;p>我复现的第一个 CVE，[font color=&amp;quot;#8470FF&amp;quot;]cheers！[/font]&lt;/p>
&lt;p>&lt;a href="https://ubuntu.com/security/CVE-2021-3493">漏洞信息&lt;/a>，&lt;a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=7c03e2cda4a584cadc398e8f6641ca9988a39d52">patch&lt;/a>，&lt;a href="https://www.pwnwiki.org/index.php?title=CVE-2021-3493_linux_kernel_%E7%89%B9%E6%AC%8A%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E">pwnwiki&lt;/a>&lt;/p>
&lt;p>Ubuntu 所特有的一个权限提升漏洞。&lt;/p>
&lt;h3 id="前置知识">前置知识&lt;/h3>
&lt;h4 id="capabilities">capabilities&lt;/h4>
&lt;p>当普通用户需要做一些 root 权限下才能做的事情时，一种方法是用 sudo 提权，一种方法是使用 suid，比如 passwd 这个程序。但是 suid 给予程序的权限过高，比如 passwd 直接拥有了完整的 root 权限，这就导致一旦 passwd 出现了漏洞，攻击者就可以完全控制目标靶机。Linux 内核在 2.2 版本后引入了 capabilities 机制来切分 root 权限，使得每个线程和文件都可以拥有其需要的一部分 root 权限。&lt;/p></description></item></channel></rss>