<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OS on blog of chuj</title><link>https://www.cjovi.icu/tags/os.html</link><description>Recent content in OS on blog of chuj</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>chujj31@gmail.com (chuj)</managingEditor><webMaster>chujj31@gmail.com (chuj)</webMaster><copyright>© chuj</copyright><lastBuildDate>Fri, 18 Jun 2021 16:55:00 +0000</lastBuildDate><atom:link href="https://www.cjovi.icu/tags/os/index.xml" rel="self" type="application/rss+xml"/><item><title>《操作系统真像还原》简单读后感</title><link>https://www.cjovi.icu/os/1407.html</link><pubDate>Fri, 18 Jun 2021 16:55:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/os/1407.html</guid><description>花了大概一个月的时间，看了 12 章，到 13 章硬盘分区驱动这里实在是看不下去了，遂决定不再看这本书了，对其操作系统的实现也告一段落了，就停留在系统调</description></item><item><title>《操作系统真像还原》操作系统实现——系统调用</title><link>https://www.cjovi.icu/os/1402.html</link><pubDate>Mon, 14 Jun 2021 20:46:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/os/1402.html</guid><description>到这里，有了前面的铺垫，要说的东西不多，其实没必要单独写出来，但是系统调用毕竟还是比较重要的东西，所以这里还是单独说一下。 Linux 下的系统调用占用</description></item><item><title>《操作系统真像还原》操作系统实现——用户进程</title><link>https://www.cjovi.icu/os/1374.html</link><pubDate>Wed, 09 Jun 2021 23:35:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/os/1374.html</guid><description>硬件生产厂商（Intel）给多进程切换提供了硬件级的解决方案，也就是使用 TSS（Task-Stat Segment），令人遗憾的是由于其效率较</description></item><item><title>《操作系统真像还原》操作系统实现——从键盘获取输入和缓冲区</title><link>https://www.cjovi.icu/os/1371.html</link><pubDate>Sun, 06 Jun 2021 20:51:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/os/1371.html</guid><description>关于键盘输入我不想写，就是一个和硬件交互的过程，这里主要还是说一下输入输出缓冲区。 代码已经打好 tag，链接，比较重要的就是 ioqueue。 获</description></item><item><title>《操作系统真像还原》操作系统实现——线程和锁</title><link>https://www.cjovi.icu/os/1359.html</link><pubDate>Thu, 03 Jun 2021 16:19:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/os/1359.html</guid><description>这篇文章写的比较乱且简略，要看的话建议跟着代码一起看。本文代码在此处 线程和进程是操作系统的重要概念。 线程和进程的区别 这似乎是一个面试中常见的</description></item><item><title>《操作系统真像还原》操作系统实现——内存池管理</title><link>https://www.cjovi.icu/os/1349.html</link><pubDate>Tue, 25 May 2021 19:42:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/os/1349.html</guid><description>操作系统需要管理内存页的映射，即虚拟地址和物理地址的映射关系，一种简单的方法是一对一映射，管理起来也比较方便，申请的时候填写页表，释放的时候</description></item><item><title>《操作系统真像还原》操作系统实现——中断</title><link>https://www.cjovi.icu/os/1339.html</link><pubDate>Sun, 23 May 2021 00:15:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/os/1339.html</guid><description>中断这个东西说起来不是很难，实现起来比较麻烦，主要是和硬件有一定联系，会略显复杂。 宏观视角 宏观地来看，一个中断的过程就是 CPU 接受中断信号，然后</description></item><item><title>《操作系统真像还原》操作系统实现——内核中的字符打印函数</title><link>https://www.cjovi.icu/os/1336.html</link><pubDate>Thu, 20 May 2021 23:06:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/os/1336.html</guid><description>昨天在看特权级相关的东西，看的云里雾里，没搞得很懂，考虑到短期之内不会弄得特别深，而且我们也用不上调用门，相关的较复杂的问题也应该不会碰到，</description></item><item><title>《操作系统真像还原》操作系统实现——引导内核</title><link>https://www.cjovi.icu/os/1330.html</link><pubDate>Tue, 18 May 2021 20:46:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/os/1330.html</guid><description>到现在为止，我们已经进入了保护模式并做好了虚拟地址映射、开启了分页模式，loader 的历史使命也差不多该完成了，现在它需要来引导我们的内核并</description></item><item><title>《操作系统真像还原》操作系统实现——进入分页模式</title><link>https://www.cjovi.icu/os/1327.html</link><pubDate>Mon, 17 May 2021 09:51:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/os/1327.html</guid><description>进入保护模式后，我们对内存的访问仍然是基于物理地址的，我们运行的程序，大多是希望自己有一段连续的地址空间的，这样方便寻址。如果使用物理地址来</description></item><item><title>《操作系统真像还原》操作系统实现——进入保护模式</title><link>https://www.cjovi.icu/os/1323.html</link><pubDate>Sat, 15 May 2021 18:26:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/os/1323.html</guid><description>之前看完王爽老师的《汇编语言》后本来准备看一下《X86汇编语言：从实模式到保护模式》，但是那本书不是很好读，再加上自己也选择的是 PWN 这个方向，</description></item><item><title>《操作系统真像还原》操作系统实现——MBR</title><link>https://www.cjovi.icu/os/1320.html</link><pubDate>Fri, 14 May 2021 22:44:00 +0000</pubDate><author>chujj31@gmail.com (chuj)</author><guid>https://www.cjovi.icu/os/1320.html</guid><description>最近这段时间准备学一学 OS，《现代操作系统》一书尝试了很多次都没看进去，还是先找一本轻松一点的书来看，尝试一下能不能跟着这本书写一个简单的 OS</description></item></channel></rss>